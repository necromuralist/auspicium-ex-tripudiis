<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="../assets/xml/rss.xsl" media="all"?><rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Notes on Kaggle (Posts about naive model competition)</title><link>https://necromuralist.github.io/Kaggle-Competitions/</link><description></description><atom:link href="https://necromuralist.github.io/Kaggle-Competitions/categories/naive-model-competition.xml" rel="self" type="application/rss+xml"></atom:link><language>en</language><lastBuildDate>Sat, 15 Sep 2018 17:42:26 GMT</lastBuildDate><generator>Nikola (getnikola.com)</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>First Naive Try</title><link>https://necromuralist.github.io/Kaggle-Competitions/posts/first-naive-try/</link><dc:creator>Cloistered Monkey</dc:creator><description>&lt;div id="table-of-contents"&gt;
&lt;h2&gt;Table of Contents&lt;/h2&gt;
&lt;div id="text-table-of-contents"&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/Kaggle-Competitions/posts/first-naive-try/#org158a063"&gt;Introduction&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/Kaggle-Competitions/posts/first-naive-try/#org2ffe613"&gt;Imports&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/Kaggle-Competitions/posts/first-naive-try/#org8129e7d"&gt;Loading the Data&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/Kaggle-Competitions/posts/first-naive-try/#org906d73c"&gt;November Only&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://necromuralist.github.io/Kaggle-Competitions/posts/first-naive-try/#org7b0e7f8"&gt;The Linear Model&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-org158a063" class="outline-2"&gt;
&lt;h2 id="org158a063"&gt;Introduction&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org158a063"&gt;
&lt;p&gt;
Our goal is to predict the number of sales for each shop for November 2015 (based on the prior months). I'm going to make some very naive guesses here with some models that only use the prior dates and the target counts.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-org2ffe613" class="outline-2"&gt;
&lt;h2 id="org2ffe613"&gt;Imports&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org2ffe613"&gt;
&lt;/div&gt;
&lt;div id="outline-container-orgc96d313" class="outline-3"&gt;
&lt;h3 id="orgc96d313"&gt;Python Standard Library&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-orgc96d313"&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;# python standard library
import warnings
import os
import pickle
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-org37ffc0d" class="outline-3"&gt;
&lt;h3 id="org37ffc0d"&gt;Supress the Warnings&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-org37ffc0d"&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;warnings.filterwarnings("ignore", message="numpy.dtype size changed")
warnings.filterwarnings("ignore", message="numpy.ufunc size changed")
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-org75a9c03" class="outline-3"&gt;
&lt;h3 id="org75a9c03"&gt;From pypi&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-org75a9c03"&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;import numpy
import pandas
from sklearn.metrics import mean_squared_error
from sklearn.model_selection import cross_val_score
from sklearn.ensemble import RandomTreesRegressor
from tabulate import tabulate
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-orgdf913d6" class="outline-3"&gt;
&lt;h3 id="orgdf913d6"&gt;This Project&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-orgdf913d6"&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;# this project
from helpers.helpers import (
    Helpers,
    DataSource,
    DataKeys,
    Pickles,
    )
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-org8129e7d" class="outline-2"&gt;
&lt;h2 id="org8129e7d"&gt;Loading the Data&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org8129e7d"&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;x_train = Helpers.unpickle(Pickles.x_train)
x_test = Helpers.unpickle(Pickles.x_test)
y_train = Helpers.unpickle(Pickles.y_train)
y_test = Helpers.unpickle(Pickles.y_test)
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;
To make it easier to filter I'm going to combine the x and y data.
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;DataKeys.target = "Month Count"
x_train[DataKeys.target] = y_train.values
x_test[DataKeys.target] = y_test.values
&lt;/pre&gt;&lt;/div&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Helpers.print_head(x_train)
&lt;/pre&gt;&lt;/div&gt;

&lt;table border="2" cellspacing="0" cellpadding="6" rules="groups" frame="hsides"&gt;


&lt;colgroup&gt;
&lt;col class="org-right"&gt;

&lt;col class="org-right"&gt;

&lt;col class="org-right"&gt;

&lt;col class="org-right"&gt;

&lt;col class="org-right"&gt;

&lt;col class="org-right"&gt;

&lt;col class="org-right"&gt;

&lt;col class="org-right"&gt;
&lt;/colgroup&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th scope="col" class="org-right"&gt;date_block_num&lt;/th&gt;
&lt;th scope="col" class="org-right"&gt;shop_id&lt;/th&gt;
&lt;th scope="col" class="org-right"&gt;item_id&lt;/th&gt;
&lt;th scope="col" class="org-right"&gt;item_price&lt;/th&gt;
&lt;th scope="col" class="org-right"&gt;item_category_id&lt;/th&gt;
&lt;th scope="col" class="org-right"&gt;month&lt;/th&gt;
&lt;th scope="col" class="org-right"&gt;year&lt;/th&gt;
&lt;th scope="col" class="org-right"&gt;Month Count&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td class="org-right"&gt;11&lt;/td&gt;
&lt;td class="org-right"&gt;15&lt;/td&gt;
&lt;td class="org-right"&gt;1324&lt;/td&gt;
&lt;td class="org-right"&gt;499&lt;/td&gt;
&lt;td class="org-right"&gt;55&lt;/td&gt;
&lt;td class="org-right"&gt;12&lt;/td&gt;
&lt;td class="org-right"&gt;2013&lt;/td&gt;
&lt;td class="org-right"&gt;1&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class="org-right"&gt;18&lt;/td&gt;
&lt;td class="org-right"&gt;31&lt;/td&gt;
&lt;td class="org-right"&gt;19981&lt;/td&gt;
&lt;td class="org-right"&gt;499&lt;/td&gt;
&lt;td class="org-right"&gt;43&lt;/td&gt;
&lt;td class="org-right"&gt;07&lt;/td&gt;
&lt;td class="org-right"&gt;2014&lt;/td&gt;
&lt;td class="org-right"&gt;2&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class="org-right"&gt;32&lt;/td&gt;
&lt;td class="org-right"&gt;28&lt;/td&gt;
&lt;td class="org-right"&gt;7934&lt;/td&gt;
&lt;td class="org-right"&gt;398&lt;/td&gt;
&lt;td class="org-right"&gt;7&lt;/td&gt;
&lt;td class="org-right"&gt;09&lt;/td&gt;
&lt;td class="org-right"&gt;2015&lt;/td&gt;
&lt;td class="org-right"&gt;1&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class="org-right"&gt;12&lt;/td&gt;
&lt;td class="org-right"&gt;43&lt;/td&gt;
&lt;td class="org-right"&gt;13518&lt;/td&gt;
&lt;td class="org-right"&gt;1499&lt;/td&gt;
&lt;td class="org-right"&gt;19&lt;/td&gt;
&lt;td class="org-right"&gt;01&lt;/td&gt;
&lt;td class="org-right"&gt;2014&lt;/td&gt;
&lt;td class="org-right"&gt;1&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class="org-right"&gt;28&lt;/td&gt;
&lt;td class="org-right"&gt;25&lt;/td&gt;
&lt;td class="org-right"&gt;19927&lt;/td&gt;
&lt;td class="org-right"&gt;329&lt;/td&gt;
&lt;td class="org-right"&gt;57&lt;/td&gt;
&lt;td class="org-right"&gt;05&lt;/td&gt;
&lt;td class="org-right"&gt;2015&lt;/td&gt;
&lt;td class="org-right"&gt;2&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-org906d73c" class="outline-2"&gt;
&lt;h2 id="org906d73c"&gt;November Only&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org906d73c"&gt;
&lt;p&gt;
What happens if we only use the month of November in the data?
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;training = x_train[x_train.month == "11"]
&lt;/pre&gt;&lt;/div&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-org7b0e7f8" class="outline-2"&gt;
&lt;h2 id="org7b0e7f8"&gt;The Linear Model&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org7b0e7f8"&gt;
&lt;p&gt;
What happens if we just use the default linear regression model? The first problem we have is that we have both non-numeric data and categorical data. I think removing the &lt;code&gt;item_name&lt;/code&gt; variable seems reasonable at this point, since we have unique &lt;code&gt;item_id&lt;/code&gt; values for each item, although it's possible that some text-mining might reveal something in the names, because this is just a naive approach that will use linear regression.
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;del(x_train[DataKeys.name])
&lt;/pre&gt;&lt;/div&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;regression = linear_model.LinearRegression()
regression.fit(x_train, y_train)
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;</description><category>naive model competition</category><guid>https://necromuralist.github.io/Kaggle-Competitions/posts/first-naive-try/</guid><pubDate>Sun, 12 Aug 2018 02:37:37 GMT</pubDate></item></channel></rss>