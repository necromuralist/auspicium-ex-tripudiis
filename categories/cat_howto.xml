<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="../assets/xml/rss.xsl" media="all"?><rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Notes on Kaggle (Posts about howto)</title><link>https://necromuralist.github.io/Kaggle-Competitions/</link><description></description><atom:link href="https://necromuralist.github.io/Kaggle-Competitions/categories/cat_howto.xml" rel="self" type="application/rss+xml"></atom:link><language>en</language><lastBuildDate>Fri, 24 Aug 2018 22:11:07 GMT</lastBuildDate><generator>Nikola (getnikola.com)</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>Set Up the Kaggle Command-Line Command</title><link>https://necromuralist.github.io/Kaggle-Competitions/posts/set-up-the-kaggle-command-line-command/</link><dc:creator>Cloistered Monkey</dc:creator><description>&lt;p&gt;
These are my notes as I set up the command-line interface. The official instructions are in the &lt;a href="https://github.com/Kaggle/kaggle-api"&gt;README on github&lt;/a&gt;.
&lt;/p&gt;

&lt;div id="outline-container-org22a6ea2" class="outline-2"&gt;
&lt;h2 id="org22a6ea2"&gt;Install the Command&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org22a6ea2"&gt;
&lt;p&gt;
The code is available through &lt;a href="https://pypi.org/project/kaggle/"&gt;pypi&lt;/a&gt; so you can install it through pip. Their instructions say to install it at the user-level but I'm doing it in a &lt;code&gt;virtualenv&lt;/code&gt; so that actually doesn't work for me, instead I did a regular &lt;code&gt;pip&lt;/code&gt; install (after installing &lt;code&gt;wheel&lt;/code&gt;).
&lt;/p&gt;

&lt;pre class="example"&gt;
pip install kaggle
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-org418aab0" class="outline-2"&gt;
&lt;h2 id="org418aab0"&gt;Get Your Credentials&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org418aab0"&gt;
&lt;/div&gt;
&lt;div id="outline-container-org0deddec" class="outline-3"&gt;
&lt;h3 id="org0deddec"&gt;Download the JSON File From Kaggle&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-org0deddec"&gt;
&lt;p&gt;
Log in to your kaggle account and click on the &lt;i&gt;Account&lt;/i&gt; menu (it's hidden until you hover over the drop-down widget).
&lt;/p&gt;


&lt;div class="figure"&gt;
&lt;p&gt;&lt;img src="https://necromuralist.github.io/Kaggle-Competitions/posts/set-up-the-kaggle-command-line-command/kaggle_account_menu.png" alt="kaggle_account_menu.png"&gt;
&lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;
Scroll down to the &lt;i&gt;API&lt;/i&gt; box and click on &lt;b&gt;Create New API Token&lt;/b&gt;.
&lt;/p&gt;


&lt;div class="figure"&gt;
&lt;p&gt;&lt;img src="https://necromuralist.github.io/Kaggle-Competitions/posts/set-up-the-kaggle-command-line-command/api_box.png" alt="api_box.png"&gt;
&lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;
This will start a file download, if it prompts you save it to your computer.
&lt;/p&gt;


&lt;div class="figure"&gt;
&lt;p&gt;&lt;img src="https://necromuralist.github.io/Kaggle-Competitions/posts/set-up-the-kaggle-command-line-command/download_json.png" alt="download_json.png"&gt;
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-orgbd455eb" class="outline-3"&gt;
&lt;h3 id="orgbd455eb"&gt;Set Up the File&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-orgbd455eb"&gt;
&lt;p&gt;
Store this file in a folder named &lt;code&gt;.kaggle&lt;/code&gt;.
&lt;/p&gt;

&lt;pre class="example"&gt;
mkdir ~/.kaggle
mv ~/Downloads/kaggle.json ~/.kaggle/
&lt;/pre&gt;

&lt;p&gt;
To be on the safe side, change the permissions on the file so that other users can't read it.
&lt;/p&gt;

&lt;pre class="example"&gt;
chmod 600 ~/.kaggle/kaggle.json
&lt;/pre&gt;

&lt;p&gt;
If you look in the file you'll see that it just has a JSON object with your username and API key.
&lt;/p&gt;

&lt;pre class="example"&gt;
{"username":"bumblebee","key":"8b970a13a2cfcfb7a77bdb8b4effaebc"}
&lt;/pre&gt;

&lt;p&gt;
The instructions say you could also export the values as environment variables, but I'll leave it like this for now.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-orgb160a5f" class="outline-2"&gt;
&lt;h2 id="orgb160a5f"&gt;Test it out&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-orgb160a5f"&gt;
&lt;p&gt;
It's a python command that uses the basic help system you would expect if you've used python command-line programs before.
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;kaggle --help
&lt;/pre&gt;&lt;/div&gt;

&lt;pre class="example"&gt;
usage: kaggle [-h] [-v] {competitions,c,datasets,d,kernels,k,config} ...

optional arguments:
  -h, --help            show this help message and exit
  -v, --version         show program's version number and exit

commands:
  {competitions,c,datasets,d,kernels,k,config}
                        Use one of:
                        competitions {list, files, download, submit, submissions, leaderboard}
                        datasets {list, files, download, create, version, init, metadata, status}
                        config {view, set, unset}
    competitions (c)    Commands related to Kaggle competitions
    datasets (d)        Commands related to Kaggle datasets
    kernels (k)         Commands related to Kaggle kernels
    config              Configuration settings
&lt;/pre&gt;

&lt;p&gt;
For this project you would download the data like this (downloading to a folder named &lt;code&gt;data&lt;/code&gt;).
&lt;/p&gt;

&lt;pre class="example"&gt;
kaggle competitions download -c competitive-data-science-final-project data
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-org72db10b" class="outline-2"&gt;
&lt;h2 id="org72db10b"&gt;The Actual API&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org72db10b"&gt;
&lt;p&gt;
If you look under the hood the command is just doing REST calls. To make it programattic you could probably use &lt;a href="http://docs.python-requests.org/en/master/"&gt;requests&lt;/a&gt; or something similar to interact with it directly. You can see the calls you need to make by looking at the &lt;a href="https://github.com/Kaggle/kaggle-api/blob/master/KaggleSwagger.yaml"&gt;swagger file&lt;/a&gt;.
&lt;/p&gt;
&lt;/div&gt;

&lt;div id="outline-container-org0991aa4" class="outline-3"&gt;
&lt;h3 id="org0991aa4"&gt;How the CLI does it&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-org0991aa4"&gt;
&lt;p&gt;
If you look in the &lt;code&gt;kaggle.__init__.py&lt;/code&gt; file in the repository you'll see these imports.
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;from kaggle.api.kaggle_api_extended import KaggleApi
from kaggle.api_client import ApiClient
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;
Then when the command-line is called to download the data set it does this.
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;api = KaggleApi(ApiClient())
api.competition_download_cli(competition=None, competition_opt="competitive-data-science-final-project", path="data")
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;</description><category>kaggle howto</category><guid>https://necromuralist.github.io/Kaggle-Competitions/posts/set-up-the-kaggle-command-line-command/</guid><pubDate>Sat, 11 Aug 2018 20:37:44 GMT</pubDate></item></channel></rss>