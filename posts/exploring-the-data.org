#+BEGIN_COMMENT
.. title: Exploring The Data
.. slug: exploring-the-data
.. date: 2018-08-11 15:26:40 UTC-07:00
.. tags: kaggle data exploration
.. category: exploration
.. link: 
.. description: Looking at the data.
.. type: text
#+END_COMMENT
#+OPTIONS: ^:{}
#+TOC: headlines 1
* Imports
** Suppressing the Numpy Warnings
   When you import pandas you get some warnings:

#+BEGIN_EXAMPLE
/usr/lib/python3.6/importlib/_bootstrap.py:219: RuntimeWarning: numpy.dtype size changed, may indicate binary incompatibility. Expected 96, got 88
  return f(*args, **kwds)
/usr/lib/python3.6/importlib/_bootstrap.py:219: RuntimeWarning: numpy.dtype size changed, may indicate binary incompatibility. Expected 96, got 88
  return f(*args, **kwds)
#+END_EXAMPLE

According to [[https://stackoverflow.com/questions/40845304/runtimewarning-numpy-dtype-size-changed-may-indicate-binary-incompatibility][Stack Overflow]], this is because [[https://www.scipy.org/][scipy]] is built against an older version of [[http://www.numpy.org/][numpy]], but it shouldn't actually affect the way it works, so we should just suppress it.

#+BEGIN_SRC python :session explore :results none
import warnings
warnings.filterwarnings("ignore", message="numpy.dtype size changed")
warnings.filterwarnings("ignore", message="numpy.ufunc size changed")
#+END_SRC

** The rest of the imports
#+BEGIN_SRC python :session explore :results none :noweb-ref python-standard-library
# python standard library
import os
import pickle
#+END_SRC

#+BEGIN_SRC python :session explore :results none
# from pypi
import matplotlib.pyplot as pyplot
import numpy
import pandas
import seaborn
#+END_SRC

#+BEGIN_SRC python :session explore :results none :noweb-ref imports
# from pypi
from tabulate import tabulate
#+END_SRC

#+BEGIN_SRC python :session explore :results none
% matplotlib inline
#+END_SRC

* The Tangle
  Exports so some of this can be re-used.

#+BEGIN_SRC python :tangle helpers/helpers.py
<<python-standard-library>>

<<imports>>


<<helpers>>


<<datasource>>


<<data-names>>


<<data-keys>>
#+END_SRC

#+RESULTS:

* Helpers
  Just some functions that keep coming up.

#+BEGIN_SRC python :session explore :results none :noweb-ref helpers
class Helpers:
    """Helper functions"""
    pickle_target = "../pickles/"
    pickle_target_string = pickle_target + "{}.pkl"

    @staticmethod
    def print_head(frame, showindex=False):
        """prints the head of the given data frame

        Args:
         frame (pandas.DataFrame): data frame to print as a table
         showindex (bool): whether to print the index
        """
        print(tabulate(frame.head(), headers="keys", tablefmt="orgtbl",
                       showindex=showindex))
        return

    @staticmethod
    def print_table(data, showindex=True):
        """print the data

        Args:
         data: some kind of data-frame
        """
        print(tabulate(data, headers="keys", tablefmt="orgtbl",
                       showindex=showindex))
        return

    @staticmethod
    def pickle_it(thing, name=None):
        """save the object to a pickle in the data folder

        Args:
         thing: object to pickle
         name: thing to call the pickle
        """
        name = name if name is not None else thing.__name__
        with open(
                os.path.join(
                    Helpers.pickle_target_string.format(name)),
                "wb") as pickler:
            pickle.dump(thing, pickler)
        return

    @staticmethod
    def unpickle(name):
        """loads the pickled object from the data folder
    
        Args;
         name: name of the pickle without the folder or extension
    
        Returns:
         object: the un-pickled object
        """
        with open(Helpers.pickle_target_string.format(name),
                  "rb") as unpickler:
            unpickled = pickle.load(unpickler)
        return unpickled
#+END_SRC

* Constants
  As always, I'll try to put constants in the same place.
** Data Names
   This is just a re-mapping of the file-names since I keep forgetting them.

#+BEGIN_SRC python :session explore :results none :noweb-ref data-names
class DataNames:
    """thing with the data-file-names (without extensions) as attributes"""
    training = "sales_train"
    items = "items"
    item_categories = "item_categories"
    shops = "shops"
#+END_SRC

** Data Source
   
#+BEGIN_SRC python :session explore :results none :noweb-ref datasource
class DataSource:
    """Strings for the files

    Args:
     directory: path to the data-folder
    """
    def __init__(self, directory="../data/"):
        self.directory = directory
        self._file_names = None
        self._paths = None
        self._file_name_paths = None
        return

    @property
    def file_names(self):
        """list of file names in the data directory"""
        if self._file_names is None:
            self._file_names = os.listdir(self.directory)
        return self._file_names

    @property
    def paths(self):
        """list of paths to the file names"""
        if self._paths is None:
            self._paths = [os.path.join(self.directory, name)
                    for name in self.file_names]
        return self._paths

    @property
    def file_name_paths(self):
        """dict of name: path"""
        if self._file_name_paths is None:
            self._file_name_paths = {
                name.split('.')[0]: self.paths[index]
                for index, name in enumerate(self.file_names)}
        return self._file_name_paths
    
    def set_attributes(self):
        """attaches the file names to this object"""
        for name in self.file_names:
            setattr(self, name.split('.')[0], name)
        return
#+END_SRC

** Data Keys

#+BEGIN_SRC python :session explore :results none :noweb-ref data-keys
class DataKeys:
    """Column names/keys for the data."""
    item_category = "item_category_id"
    shop = "shop_id"
    item = "item_id"
    date = "date"
    date_block = "date_block_num"
    price = "item_price"
    day_count = "item_cnt_day"
    month_count = 'item_count_month'
    name = "item_name"
    day = "day"
    month = "month"
    year = "year"
#+END_SRC

#+BEGIN_SRC python :session explore :results none
data_source = DataSource()
data_source.set_attributes()
#+END_SRC

* The Files

  These are the files we are given.

#+BEGIN_SRC python :session explore :results output raw :exports both
for name in data_source.file_names:
    print(" - {}".format(name))
#+END_SRC

#+RESULTS:
 - sample_submission.csv.gz
 - shops.csv
 - items.csv
 - sales_train.csv.gz
 - item_categories.csv
 - test.csv.gz

I was originally thinking I would need to unzip the gzipped files but apparently the [[https://pandas.pydata.org/pandas-docs/stable/io.html#io-read-csv-table][=Pandas.read_csv=]] function will decompress them automagically, so I guess I can leave them.

#+BEGIN_SRC python :session explore :results none
frames = {data_source.file_names[index]: pandas.read_csv(path)
          for index, path in enumerate(data_source.paths)}
#+END_SRC

#+BEGIN_SRC python :session explore :results output raw :exports both
for name, frame in frames.items():
    print("\n** {}".format(name))
    Helpers.print_head(frame)
    print()
    print(frame.info())
#+END_SRC

#+RESULTS:

** sample_submission.csv.gz
|   ID |   item_cnt_month |
|------+------------------|
|    0 |              0.5 |
|    1 |              0.5 |
|    2 |              0.5 |
|    3 |              0.5 |
|    4 |              0.5 |

<class 'pandas.core.frame.DataFrame'>
RangeIndex: 214200 entries, 0 to 214199
Data columns (total 2 columns):
ID                214200 non-null int64
item_cnt_month    214200 non-null float64
dtypes: float64(1), int64(1)
memory usage: 3.3 MB
None

** shops.csv
| shop_name                      |   shop_id |
|--------------------------------+-----------|
| !Якутск Орджоникидзе, 56 фран  |         0 |
| !Якутск ТЦ "Центральный" фран  |         1 |
| Адыгея ТЦ "Мега"               |         2 |
| Балашиха ТРК "Октябрь-Киномир" |         3 |
| Волжский ТЦ "Волга Молл"       |         4 |

<class 'pandas.core.frame.DataFrame'>
RangeIndex: 60 entries, 0 to 59
Data columns (total 2 columns):
shop_name    60 non-null object
shop_id      60 non-null int64
dtypes: int64(1), object(1)
memory usage: 1.0+ KB
None

** items.csv
| item_name                                                            |   item_id |   item_category_id |
|----------------------------------------------------------------------+-----------+--------------------|
| ! ВО ВЛАСТИ НАВАЖДЕНИЯ (ПЛАСТ.)         D                            |         0 |                 40 |
| !ABBYY FineReader 12 Professional Edition Full [PC, Цифровая версия] |         1 |                 76 |
| ***В ЛУЧАХ СЛАВЫ   (UNV)                    D                        |         2 |                 40 |
| ***ГОЛУБАЯ ВОЛНА  (Univ)                      D                      |         3 |                 40 |
| ***КОРОБКА (СТЕКЛО)                       D                          |         4 |                 40 |

<class 'pandas.core.frame.DataFrame'>
RangeIndex: 22170 entries, 0 to 22169
Data columns (total 3 columns):
item_name           22170 non-null object
item_id             22170 non-null int64
item_category_id    22170 non-null int64
dtypes: int64(2), object(1)
memory usage: 519.7+ KB
None

** sales_train.csv.gz
| date       |   date_block_num |   shop_id |   item_id |   item_price |   item_cnt_day |
|------------+------------------+-----------+-----------+--------------+----------------|
| 02.01.2013 |                0 |        59 |     22154 |       999    |              1 |
| 03.01.2013 |                0 |        25 |      2552 |       899    |              1 |
| 05.01.2013 |                0 |        25 |      2552 |       899    |             -1 |
| 06.01.2013 |                0 |        25 |      2554 |      1709.05 |              1 |
| 15.01.2013 |                0 |        25 |      2555 |      1099    |              1 |

<class 'pandas.core.frame.DataFrame'>
RangeIndex: 2935849 entries, 0 to 2935848
Data columns (total 6 columns):
date              object
date_block_num    int64
shop_id           int64
item_id           int64
item_price        float64
item_cnt_day      float64
dtypes: float64(2), int64(3), object(1)
memory usage: 134.4+ MB
None

** item_categories.csv
| item_category_name      |   item_category_id |
|-------------------------+--------------------|
| PC - Гарнитуры/Наушники |                  0 |
| Аксессуары - PS2        |                  1 |
| Аксессуары - PS3        |                  2 |
| Аксессуары - PS4        |                  3 |
| Аксессуары - PSP        |                  4 |

<class 'pandas.core.frame.DataFrame'>
RangeIndex: 84 entries, 0 to 83
Data columns (total 2 columns):
item_category_name    84 non-null object
item_category_id      84 non-null int64
dtypes: int64(1), object(1)
memory usage: 1.4+ KB
None

** test.csv.gz
|   ID |   shop_id |   item_id |
|------+-----------+-----------|
|    0 |         5 |      5037 |
|    1 |         5 |      5320 |
|    2 |         5 |      5233 |
|    3 |         5 |      5232 |
|    4 |         5 |      5268 |

<class 'pandas.core.frame.DataFrame'>
RangeIndex: 214200 entries, 0 to 214199
Data columns (total 3 columns):
ID         214200 non-null int64
shop_id    214200 non-null int64
item_id    214200 non-null int64
dtypes: int64(3)
memory usage: 4.9 MB
None

** sample_submission.csv.gz
|   ID |   item_cnt_month |
|------+------------------|
|    0 |              0.5 |
|    1 |              0.5 |
|    2 |              0.5 |
|    3 |              0.5 |
|    4 |              0.5 |

<class 'pandas.core.frame.DataFrame'>
RangeIndex: 214200 entries, 0 to 214199
Data columns (total 2 columns):
ID                214200 non-null int64
item_cnt_month    214200 non-null float64
dtypes: float64(1), int64(1)
memory usage: 3.3 MB
None

** shops.csv
| shop_name                      |   shop_id |
|--------------------------------+-----------|
| !Якутск Орджоникидзе, 56 фран  |         0 |
| !Якутск ТЦ "Центральный" фран  |         1 |
| Адыгея ТЦ "Мега"               |         2 |
| Балашиха ТРК "Октябрь-Киномир" |         3 |
| Волжский ТЦ "Волга Молл"       |         4 |

<class 'pandas.core.frame.DataFrame'>
RangeIndex: 60 entries, 0 to 59
Data columns (total 2 columns):
shop_name    60 non-null object
shop_id      60 non-null int64
dtypes: int64(1), object(1)
memory usage: 1.0+ KB
None

** items.csv
| item_name                                                            |   item_id |   item_category_id |
|----------------------------------------------------------------------+-----------+--------------------|
| ! ВО ВЛАСТИ НАВАЖДЕНИЯ (ПЛАСТ.)         D                            |         0 |                 40 |
| !ABBYY FineReader 12 Professional Edition Full [PC, Цифровая версия] |         1 |                 76 |
| ***В ЛУЧАХ СЛАВЫ   (UNV)                    D                        |         2 |                 40 |
| ***ГОЛУБАЯ ВОЛНА  (Univ)                      D                      |         3 |                 40 |
| ***КОРОБКА (СТЕКЛО)                       D                          |         4 |                 40 |

<class 'pandas.core.frame.DataFrame'>
RangeIndex: 22170 entries, 0 to 22169
Data columns (total 3 columns):
item_name           22170 non-null object
item_id             22170 non-null int64
item_category_id    22170 non-null int64
dtypes: int64(2), object(1)
memory usage: 519.7+ KB
None

** sales_train.csv.gz
| date       |   date_block_num |   shop_id |   item_id |   item_price |   item_cnt_day |
|------------+------------------+-----------+-----------+--------------+----------------|
| 02.01.2013 |                0 |        59 |     22154 |       999    |              1 |
| 03.01.2013 |                0 |        25 |      2552 |       899    |              1 |
| 05.01.2013 |                0 |        25 |      2552 |       899    |             -1 |
| 06.01.2013 |                0 |        25 |      2554 |      1709.05 |              1 |
| 15.01.2013 |                0 |        25 |      2555 |      1099    |              1 |

<class 'pandas.core.frame.DataFrame'>
RangeIndex: 2935849 entries, 0 to 2935848
Data columns (total 6 columns):
date              object
date_block_num    int64
shop_id           int64
item_id           int64
item_price        float64
item_cnt_day      float64
dtypes: float64(2), int64(3), object(1)
memory usage: 134.4+ MB
None

** item_categories.csv
| item_category_name      |   item_category_id |
|-------------------------+--------------------|
| PC - Гарнитуры/Наушники |                  0 |
| Аксессуары - PS2        |                  1 |
| Аксессуары - PS3        |                  2 |
| Аксессуары - PS4        |                  3 |
| Аксессуары - PSP        |                  4 |

<class 'pandas.core.frame.DataFrame'>
RangeIndex: 84 entries, 0 to 83
Data columns (total 2 columns):
item_category_name    84 non-null object
item_category_id      84 non-null int64
dtypes: int64(1), object(1)
memory usage: 1.4+ KB
None

** test.csv.gz
|   ID |   shop_id |   item_id |
|------+-----------+-----------|
|    0 |         5 |      5037 |
|    1 |         5 |      5320 |
|    2 |         5 |      5233 |
|    3 |         5 |      5232 |
|    4 |         5 |      5268 |

<class 'pandas.core.frame.DataFrame'>
RangeIndex: 214200 entries, 0 to 214199
Data columns (total 3 columns):
ID         214200 non-null int64
shop_id    214200 non-null int64
item_id    214200 non-null int64
dtypes: int64(3)
memory usage: 4.9 MB
None

** sample_submission.csv.gz
|   ID |   item_cnt_month |
|------+------------------|
|    0 |              0.5 |
|    1 |              0.5 |
|    2 |              0.5 |
|    3 |              0.5 |
|    4 |              0.5 |

<class 'pandas.core.frame.DataFrame'>
RangeIndex: 214200 entries, 0 to 214199
Data columns (total 2 columns):
ID                214200 non-null int64
item_cnt_month    214200 non-null float64
dtypes: float64(1), int64(1)
memory usage: 3.3 MB
None

** shops.csv
| shop_name                      |   shop_id |
|--------------------------------+-----------|
| !Якутск Орджоникидзе, 56 фран  |         0 |
| !Якутск ТЦ "Центральный" фран  |         1 |
| Адыгея ТЦ "Мега"               |         2 |
| Балашиха ТРК "Октябрь-Киномир" |         3 |
| Волжский ТЦ "Волга Молл"       |         4 |

<class 'pandas.core.frame.DataFrame'>
RangeIndex: 60 entries, 0 to 59
Data columns (total 2 columns):
shop_name    60 non-null object
shop_id      60 non-null int64
dtypes: int64(1), object(1)
memory usage: 1.0+ KB
None

** items.csv
| item_name                                                            |   item_id |   item_category_id |
|----------------------------------------------------------------------+-----------+--------------------|
| ! ВО ВЛАСТИ НАВАЖДЕНИЯ (ПЛАСТ.)         D                            |         0 |                 40 |
| !ABBYY FineReader 12 Professional Edition Full [PC, Цифровая версия] |         1 |                 76 |
| ***В ЛУЧАХ СЛАВЫ   (UNV)                    D                        |         2 |                 40 |
| ***ГОЛУБАЯ ВОЛНА  (Univ)                      D                      |         3 |                 40 |
| ***КОРОБКА (СТЕКЛО)                       D                          |         4 |                 40 |

<class 'pandas.core.frame.DataFrame'>
RangeIndex: 22170 entries, 0 to 22169
Data columns (total 3 columns):
item_name           22170 non-null object
item_id             22170 non-null int64
item_category_id    22170 non-null int64
dtypes: int64(2), object(1)
memory usage: 519.7+ KB
None

** sales_train.csv.gz
| date       |   date_block_num |   shop_id |   item_id |   item_price |   item_cnt_day |
|------------+------------------+-----------+-----------+--------------+----------------|
| 02.01.2013 |                0 |        59 |     22154 |       999    |              1 |
| 03.01.2013 |                0 |        25 |      2552 |       899    |              1 |
| 05.01.2013 |                0 |        25 |      2552 |       899    |             -1 |
| 06.01.2013 |                0 |        25 |      2554 |      1709.05 |              1 |
| 15.01.2013 |                0 |        25 |      2555 |      1099    |              1 |

<class 'pandas.core.frame.DataFrame'>
RangeIndex: 2935849 entries, 0 to 2935848
Data columns (total 6 columns):
date              object
date_block_num    int64
shop_id           int64
item_id           int64
item_price        float64
item_cnt_day      float64
dtypes: float64(2), int64(3), object(1)
memory usage: 134.4+ MB
None

** item_categories.csv
| item_category_name      |   item_category_id |
|-------------------------+--------------------|
| PC - Гарнитуры/Наушники |                  0 |
| Аксессуары - PS2        |                  1 |
| Аксессуары - PS3        |                  2 |
| Аксессуары - PS4        |                  3 |
| Аксессуары - PSP        |                  4 |

<class 'pandas.core.frame.DataFrame'>
RangeIndex: 84 entries, 0 to 83
Data columns (total 2 columns):
item_category_name    84 non-null object
item_category_id      84 non-null int64
dtypes: int64(1), object(1)
memory usage: 1.4+ KB
None

** test.csv.gz
|   ID |   shop_id |   item_id |
|------+-----------+-----------|
|    0 |         5 |      5037 |
|    1 |         5 |      5320 |
|    2 |         5 |      5233 |
|    3 |         5 |      5232 |
|    4 |         5 |      5268 |

<class 'pandas.core.frame.DataFrame'>
RangeIndex: 214200 entries, 0 to 214199
Data columns (total 3 columns):
ID         214200 non-null int64
shop_id    214200 non-null int64
item_id    214200 non-null int64
dtypes: int64(3)
memory usage: 4.9 MB
None

* Some Counts
** How much data is there in the training set?
#+BEGIN_SRC python :session explore :results output raw :exports both
print("There are {:,} rows in the training set.".format(len(frames[data_source.sales_train])))
#+END_SRC

#+RESULTS:
There are 2,935,849 rows in the training set.

** How many shops are there?

#+BEGIN_SRC python :session explore :results output raw :exports both
print("There are {} shops.".format(len(frames[data_source.shops])))
#+END_SRC

#+RESULTS:
There are 60 shops.

** How Many Items Are There?

#+BEGIN_SRC python :session explore :results output raw :exports both
print("There are {:,} items.".format(len(frames[data_source.items])))
#+END_SRC

#+RESULTS:
There are 22,170 items.

** How Many Item Categories are there?

#+BEGIN_SRC python :session explore :results output raw :exports both
print("There are {:,} categories.".format(len(frames[data_source.item_categories])))
#+END_SRC

#+RESULTS:
There are 84 categories.


** How many date-blocks are there?

#+BEGIN_SRC python :session explore :results output raw :exports both
print("There are {} date-blocks.".format(
    len(frames[data_source.sales_train][DataKeys.date_block].unique())))
#+END_SRC

#+RESULTS:
There are 34 date-blocks.

* The Official Feature Descriptions

    | Column Name        | Description                                                                                                     |
    |--------------------+-----------------------------------------------------------------------------------------------------------------|
    | ID                 | an Id that represents a (Shop, Item) tuple within the test set                                                  |
    | shop_id            | unique identifier of a shop                                                                                     |
    | item_id            | unique identifier of a product                                                                                  |
    | item_category_id   | unique identifier of item category                                                                              |
    | item_cnt_day       | number of products sold. You are predicting a monthly amount of this measure                                    |
    | item_price         | current price of an item                                                                                        |
    | date               | date in format dd/mm/yyyy                                                                                       |
    | date_block_num     | a consecutive month number, used for convenience. January 2013 is 0, February 2013 is 1,..., October 2015 is 33 |
    | item_name          | name of item                                                                                                    |
    | shop_name          | name of shop                                                                                                    |
    | item_category_name | name of item category                                                                                           |

* The Training Set

#+BEGIN_SRC python :session explore :results output raw :exports both
print(frames[data_source.sales_train].dtypes)
#+END_SRC

#+RESULTS:
date               object
date_block_num      int64
shop_id             int64
item_id             int64
item_price        float64
item_cnt_day      float64
dtype: object

** Numeric Features

#+BEGIN_SRC python :session explore :results output raw :exports both
Helpers.print_table(frames[data_source.sales_train].describe(include=numpy.number).T)
#+END_SRC

#+RESULTS:
|                |       count |    mean |     std | min |  25% |  50% |   75% |    max |
|----------------+-------------+---------+---------+-----+------+------+-------+--------|
| date_block_num | 2.93585e+06 | 14.5699 | 9.42299 |   0 |    7 |   14 |    23 |     33 |
| shop_id        | 2.93585e+06 | 33.0017 |  16.227 |   0 |   22 |   31 |    47 |     59 |
| item_id        | 2.93585e+06 | 10197.2 |  6324.3 |   0 | 4476 | 9343 | 15684 |  22169 |
| item_price     | 2.93585e+06 | 890.853 |  1729.8 |  -1 |  249 |  399 |   999 | 307980 |
| item_cnt_day   | 2.93585e+06 | 1.24264 | 2.61883 | -22 |    1 |    1 |     1 |   2169 |

** Categorical Features
#+BEGIN_SRC python :session explore :results output raw :exports both
Helpers.print_table(frames[data_source.sales_train].describe(include=[numpy.object, pandas.Categorical]).T)
#+END_SRC

#+RESULTS:
|      |       count | unique |        top | freq |
|------+-------------+--------+------------+------|
| date | 2.93585e+06 |   1034 | 28.12.2013 | 9434 |

